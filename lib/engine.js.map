{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap f0da9f4b04e0bbdc1c5e","webpack:///./src/engine.ts","webpack:///./src/tokenizer.ts","webpack:///./src/token.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AC7DA,sCAAmC;AAEnC;AAAA,sBAUA,CAAC;AATC,qBAAO,UAAP,UAAwB;AACtB,YAAU,SAAG,YAAS,QAAU,UAAU;AAE1C,YAAgB,eAAS,OAAK,KAAO;AAE/B;AACE,oBAAE,IAAY,SAAU,WAAE,2BAAqC,eAEzE;AAHS;AAGR;AACH,WAAC;AAAA;AAED,kBAAe,IAAY,S;;;;;;;;;;ACd3B,kCAA2B;AAC3B,IAAgB,aAAO;AACvB,IAAc,WAAO;AAErB;AAAA,yBAyCA,CAAC;AApCC,wBAAS,YAAT,UAAgC;AAC9B,YAAO,MAAiB;AACxB,YAAU,SAAmB;AAE7B,YAAS,QAAM,IAAQ,QAAY;AAEhC,YAAM,SAAI,CAAG,GAAE;AACV,mBAAK,KAAC,IAAI,QAAK,QAAe,gBAAU;AACxC,mBACR;AAAC;AAGD,eAAO,CAAM,QAAM,IAAQ,QAAa,gBAAI,CAAE,GAAG;AAE/C,gBAAa,YAAM,IAAM,MAAE,GAAQ;AAC7B,mBAAK,KAAC,IAAI,QAAK,QAAU,WAAU;AAEtC,kBAAM,IAAM,MAAO;AAEjB,oBAAM,IAAQ,QAAU;AAE1B,gBAAM,SAAI,CAAG,GAAE;AAChB,sBAAM,IAAS,MACjB;AAAC;AAED,gBAAY,WAAM,IAAM,MAAE,GAAQ;AAC5B,mBAAK,KAAC,IAAI,QAAK,QAAS,UAAc;AAEzC,kBAAM,IAAM,MAAM,QACvB;AAAC;AAEE,YAAI,IAAO,SAAK,GAAE;AACb,mBAAK,KAAC,IAAI,QAAK,QAAI,KAC3B;AAAC;AACK,eACR;AAAC;AACH,WAAC;AAAA;AACD,kBAAe,IAAe,Y;;;;;;;;;;AC9C9B,eAA0B;AAClB,WAAI,IAAQ,QAAM,OAC1B;AAAC;AAED;AAIE,mBAAyB,OAAc;AACjC,aAAM,QAAQ;AACd,aAAK,OACX;AAAC;AAED,oBAAQ,WAAR;AACK,YAAK,KAAK,SAAY,QAAE;AACnB,mBAAC,OAAS,MAAK,KAAO,SAC9B;AAAC;AACK,eAAC,MAAQ,KAAM,QACvB;AAAC;AACH,WAAC;AAAA;AACD,kBAAoB,M","file":"engine.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"engine\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"engine\"] = factory();\n\telse\n\t\troot[\"engine\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f0da9f4b04e0bbdc1c5e","import tokenizer from './tokenizer'\n\nclass Engine {\n  compile(template: string): Object {\n    let tokens = tokenizer.getTokens(template)\n\n    let functionBody = tokens.join(' + ')\n\n    return {\n      render: new Function('context', `with(context) {return ${functionBody} }`)\n    }\n  }\n}\n\nexport default new Engine()\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/eslint-loader!./src/engine.ts","import Token from './token'\nconst startToken = '{{'\nconst endToken = '}}'\n\nclass Tokenizer {\n  /**\n   * 根据输入构造模板\n   * @param {*} templateString\n   */\n  getTokens(templateString: string): Array<Token> {\n    var str = templateString\n    let tokens: Array<Token> = []\n\n    var index = str.indexOf(startToken)\n    //如果没有包含{{，认为是普通字符串\n    if (index == -1) {\n      tokens.push(new Token(templateString, 'text'))\n      return tokens\n    }\n\n    //遍历模板，构造token\n    while ((index = str.indexOf(startToken)) != -1) {\n      //获取{{之前的内容\n      let textValue = str.slice(0, index)\n      tokens.push(new Token(textValue, 'text'))\n      //将str设置为{{之后的内容\n      str = str.slice(index)\n\n      index = str.indexOf(endToken)\n      //如果没有配对的}}，抛出异常\n      if (index == -1) {\n        throw new Error('template error')\n      }\n      //获取占位符\n      let variable = str.slice(2, index)\n      tokens.push(new Token(variable, 'variable'))\n      //将str设置为}}之后的内容\n      str = str.slice(index + 2)\n    }\n    //如果最后一个}}之后还有值，则构造text类型的token\n    if (str.length > 0) {\n      tokens.push(new Token(str, 'text'))\n    }\n    return tokens\n  }\n}\nexport default new Tokenizer()\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/eslint-loader!./src/tokenizer.ts","function quote(str: string) {\n  return str.replace(/\\\"/g, '\"')\n}\n\nclass Token {\n  value: string\n  type: string\n\n  constructor(value: string, type: string) {\n    this.value = value\n    this.type = type\n  }\n\n  toString(): string {\n    if (this.type === 'text') {\n      return `\"${quote(this.value)}\"`\n    }\n    return `(${this.value})`\n  }\n}\nexport default Token\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/eslint-loader!./src/token.ts"],"sourceRoot":""}